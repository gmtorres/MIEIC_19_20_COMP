import static ioPlus.requestNumber() int;
import static io.print(String) void;
import static io.print(int) void;
import static sort.equals(int,int) boolean;

class HSort
{
public boolean heapify(int[] a,int i,int n)
{ 
 
int l;
int r;
int temp;
int largest;
l=2*i+1;
r=2*i+2;
 
 
if(l<n && a[l]>a[i])
largest=l;
else
largest=i;
 
if(r<n && a[r]>a[largest])
largest=r;
 
else if(!(sort.equals(largest,i)))
{
    temp=a[largest];
    a[largest]=a[i];
    a[i]=temp;
    this.heapify(a,largest,n);

}
else {}
 return true;
}
 
public boolean bheap(int[] a)
{ 
 int i;
for(i=(a.length/2)-1;i>0 || sort.equals(i,0);i=i-1)
{
 
this.heapify(a,i,a.length);
 
}
 return true;

}
 
public boolean Sort(int[] a)
{ 
int temp;
int j; 
int i;
 
this.bheap(a);
 
for( i=(a.length)-1; i>0;)
{
temp=a[0];
a[0]=a[i];
a[i]=temp;
i= i-1;
this.heapify(a,0,i) ;
 
}
 return true;
} 
 
public boolean printarray(int[] a)
{
int i;
for(i=0; i < a.length; i=i+1)
{
io.print(a[i]);
}
 return true;

}
    public static void main(String[] args) 
    {
        int n;
        int res;
        int i;
        int[] a;
        HSort h;
        h = new HSort();
        n = ioPlus.requestNumber();
        a = new int[n];
        io.print("Enter elements ");

        for( i=0; i < n; i=i+1)
        {
        a[i] =  ioPlus.requestNumber();
        }
        io.print("elements in array ");
        h.printarray(a);
        h.Sort(a);
        io.print("elements after sorting");
        h.printarray(a);

    }
 
 
}