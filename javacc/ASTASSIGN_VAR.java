/* Generated By:JJTree: Do not edit this line. ASTASSIGN_VAR.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTASSIGN_VAR extends SimpleNode {
  public ASTASSIGN_VAR(int id) {
    super(id);
  }

  public ASTASSIGN_VAR(Jmm p, int id) {
    super(p, id);
  }
  
  
  public boolean doSemanticAnalysis() {
	  
	  
	  boolean result = true;
	  
	  if(this.children != null) {
		  for(Node node : this.children) {
			  boolean r = ((SimpleNode) node).doSemanticAnalysis();
			  result = result && r;
		  }
	  }
	  
	  if(result == false)
		  return false;
	  
	  SimpleNode lhn  = (SimpleNode) this.children[0];
	  SimpleNode rhn  = (SimpleNode) this.children[1];
	  
	  if(!lhn.type.equals(rhn.type)) {
		  Descriptor d = this.descriptors.getDescriptor(rhn.type);
		  if(d == null || !d.doesExtends(lhn.type)) {
			  System.out.println("Assigning imcompatible type:  " + lhn.type + "  and  " + rhn.type);
			  return false;
		  }
	  }
	  
	  this.simbolTable.getSimbol(((SimpleNode) lhn.children[0]).name).isInitialized = true;
	  
	  return result;
  }


}
/* JavaCC - OriginalChecksum=77313bfccbff1d88a81394b17431258c (do not edit this line) */
